name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  merge_group:
    types: [checks_requested]
    
jobs:
  linux-ci:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ["", "force-inprocess", "memfd"]
    steps:
      - uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy

      - name: rustfmt
        run: cargo fmt --check

      - name: clippy
        run: cargo clippy --features "${{ matrix.features }}"

      - name: Cargo build
        run: cargo build --features "${{ matrix.features }}"

      - name: Cargo test
        run: cargo test --features "${{ matrix.features }}"
        env:
          RUST_BACKTRACE: 1

  mac-ci:
    name: macOS
    runs-on: macos-latest
    strategy:
      matrix:
        features: ["", "force-inprocess"]

    steps:
      - uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Cargo build
        run: cargo build --features "${{ matrix.features }}"

      - name: Cargo test
        run: cargo test --features "${{ matrix.features }}"
        env:
          RUST_BACKTRACE: 1

  windows-ci:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        features: ["", "--features force-inprocess", "--features windows-shared-memory-equality"]
        target: ["x86_64-pc-windows-msvc", "i686-pc-windows-msvc"]

    steps:
      - uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}

      - name: Cargo build
        run: cargo build ${{ matrix.features }} --target ${{ matrix.target }}

      - name: Cargo test
        run: cargo test ${{ matrix.features }} --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

  build_result:
    name: Result
    runs-on: ubuntu-latest
    needs:
      - "linux-ci"
      - "mac-ci"
      - "windows-ci"

    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: "!success()"

